name: Screenshot and likes/views

on:
  push:
    branches: [main, master]
  schedule:
    - cron: '0 */2 * * *'
  workflow_dispatch:
    inputs:
      add_like:
        description: '–î–æ–¥–∞—Ç–∏ –ª–∞–π–∫ (–ª–∏—à–µ –æ–¥–∏–Ω –Ω–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞)'
        required: false
        default: true
        type: boolean
      screenshot_selector:
        description: 'CSS —Å–µ–ª–µ–∫—Ç–æ—Ä –¥–ª—è –∑–Ω—ñ–º–∫—É –µ–∫—Ä–∞–Ω—É'
        required: false
        default: 'body'
        type: string

env:
  SCREENSHOT_WIDTH: ${{ vars.SCREENSHOT_WIDTH || '1920' }}
  SCREENSHOT_HEIGHT: ${{ vars.SCREENSHOT_HEIGHT || '1080' }}
  BADGE_STYLE: ${{ vars.BADGE_STYLE || 'for-the-badge' }}
  BADGE_COLOR: ${{ vars.BADGE_COLOR || 'brightgreen' }}
  LIKES_COLOR: ${{ vars.LIKES_COLOR || 'red' }}

jobs:
  update-readme-and-visitor:
    runs-on: ubuntu-latest

    steps:
      - name: –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—é
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è npm –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
        run: |
          if [ -f "package.json" ]; then
            npm ci
          else
            echo '{"name": "screenshot-generator", "version": "1.0.0", "dependencies": {"puppeteer": "^21.0.0"}}' > package.json
            npm install
          fi
        env:
          PUPPETEER_SKIP_DOWNLOAD: true

      - name: –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–∫—Ä–∏–ø—Ç—É –¥–ª—è –∑–Ω—ñ–º–∫—É –µ–∫—Ä–∞–Ω—É
        run: |
          mkdir -p scripts
          cat > scripts/screenshot.js << 'EOF'
          const puppeteer = require('puppeteer');
          const fs = require('fs');
          const path = require('path');

          async function takeScreenshot() {
            const browser = await puppeteer.launch({
              args: ['--no-sandbox', '--disable-setuid-sandbox', '--disable-dev-shm-usage'],
              executablePath: '/usr/bin/google-chrome'
            });
            
            const page = await browser.newPage();
            
            const githubPages = `https://${process.env.GITHUB_REPOSITORY_OWNER}.github.io/${process.env.GITHUB_REPOSITORY_NAME}/`;
            const indexPath = path.join(process.cwd(), 'index.html');
            
            let targetUrl;
            if (fs.existsSync(indexPath)) {
              targetUrl = `file://${indexPath}`;
            } else {
              targetUrl = githubPages;
              console.log(`üì° –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é URL GitHub Pages: ${targetUrl}`);
            }
            
            try {
              await page.setViewport({
                width: parseInt(process.env.SCREENSHOT_WIDTH) || 1920,
                height: parseInt(process.env.SCREENSHOT_HEIGHT) || 1080
              });
              
              await page.goto(targetUrl, { waitUntil: 'networkidle2', timeout: 30000 });
              
              const selector = process.env.SCREENSHOT_SELECTOR || 'body';
              await page.waitForSelector(selector, { timeout: 10000 });
              
              await page.screenshot({
                path: 'screenshot.png',
                fullPage: true,
                type: 'png'
              });
              
              console.log('‚úÖ –ó–Ω—ñ–º–æ–∫ –µ–∫—Ä–∞–Ω—É —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ');
            } catch (error) {
              console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –∑–Ω—ñ–º–∫—É –µ–∫—Ä–∞–Ω—É:', error.message);
              
              const fallbackSvg = `
                <svg width="800" height="600" xmlns="http://www.w3.org/2000/svg">
                  <rect width="800" height="600" fill="#f0f0f0"/>
                  <text x="400" y="300" text-anchor="middle" fill="#333" font-size="24" font-family="Arial">
                    –ó–Ω—ñ–º–æ–∫ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π
                  </text>
                </svg>
              `;
              
              fs.writeFileSync('screenshot.svg', fallbackSvg);
            }
            
            await browser.close();
          }

          takeScreenshot().catch(console.error);
          EOF

      - name: –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∑–Ω—ñ–º–∫—É –µ–∫—Ä–∞–Ω—É
        run: node scripts/screenshot.js
        env:
          GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
          GITHUB_REPOSITORY_NAME: ${{ github.event.repository.name }}
          SCREENSHOT_SELECTOR: ${{ github.event.inputs.screenshot_selector }}

      - name: –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Å–∏—Å—Ç–µ–º–æ—é –ª–∞–π–∫—ñ–≤
        run: |
          # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö –ª–∞–π–∫—ñ–≤
          if [ ! -f "likes-data.json" ]; then
            echo '{"total_likes":0,"unique_users":[],"created_at":"","last_updated":""}' > likes-data.json
          fi

          # –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–∏—Ö –¥–∞–Ω–∏—Ö
          CURRENT_LIKES=$(jq -r '.total_likes' likes-data.json)
          CURRENT_USERS=$(jq -r '.unique_users[]' likes-data.json)

          # –û–±—Ä–æ–±–∫–∞ –∑–∞–ø–∏—Ç—É –Ω–∞ –ª–∞–π–∫
          if [ "${{ github.event.inputs.add_like }}" = "true" ]; then
            USER="${{ github.actor }}"
            
            if echo "$CURRENT_USERS" | grep -q "$USER"; then
              echo "LIKE_STATUS=already_liked" >> $GITHUB_ENV
              echo "‚ö†Ô∏è $USER –≤–∂–µ —Å—Ç–∞–≤–∏–≤ –ª–∞–π–∫ —Ü—å–æ–º—É –ø—Ä–æ—î–∫—Ç—É!"
            else
              NEW_LIKES=$((CURRENT_LIKES + 1))
              jq --arg user "$USER" --arg date "$(date -u +%Y-%m-%dT%H:%M:%SZ)" \
                '.total_likes += 1 | .unique_users += [$user] | .last_updated = $date | if .created_at == "" then .created_at = $date else . end' \
                likes-data.json > tmp.json && mv tmp.json likes-data.json
              
              echo "LIKE_STATUS=added" >> $GITHUB_ENV
              echo "üíñ –ù–æ–≤–∏–π –ª–∞–π–∫ –≤—ñ–¥ $USER! –í—Å—å–æ–≥–æ: $NEW_LIKES"
            fi
          fi

          # –û–Ω–æ–≤–ª–µ–Ω–Ω—è –±–µ–π–¥–∂—É –ª–∞–π–∫—ñ–≤
          CURRENT_LIKES=$(jq -r '.total_likes' likes-data.json)
          echo "{\"schemaVersion\":1,\"label\":\"‚ù§Ô∏è –ª–∞–π–∫–∏\",\"message\":\"$CURRENT_LIKES\",\"color\":\"${{ env.LIKES_COLOR }}\",\"style\":\"${{ env.BADGE_STYLE }}\"}" > likes-count.json

      - name: –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ª—ñ—á–∏–ª—å–Ω–∏–∫–∞ –≤—ñ–¥–≤—ñ–¥—É–≤–∞–Ω—å
        run: |
          # –†–µ–∑–µ—Ä–≤–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫—É –≤—ñ–¥–≤—ñ–¥—É–≤–∞–Ω—å
          if [ ! -f "visitor-data.json" ]; then
            echo '{"unique_visitors":1,"last_updated":"","fallback_mode":true}' > visitor-data.json
          fi

          # –ó–±—ñ–ª—å—à–µ–Ω–Ω—è –ø—Ä–∏ —Ä—É—á–Ω–æ–º—É –∑–∞–ø—É—Å–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ "${{ github.actor }}" != "github-actions[bot]" ]; then
            CURRENT=$(jq -r '.unique_visitors' visitor-data.json)
            NEW=$((CURRENT + 1))
            jq --arg count "$NEW" --arg date "$(date -u +%Y-%m-%dT%H:%M:%SZ)" \
              '.unique_visitors = ($count | tonumber) | .last_updated = $date' \
              visitor-data.json > tmp.json && mv tmp.json visitor-data.json
          fi

          CURRENT_VISITORS=$(jq -r '.unique_visitors' visitor-data.json)
          echo "{\"schemaVersion\":1,\"label\":\"üëÄ –ø–µ—Ä–µ–≥–ª—è–¥–∏\",\"message\":\"$CURRENT_VISITORS\",\"color\":\"${{ env.BADGE_COLOR }}\",\"style\":\"${{ env.BADGE_STYLE }}\"}" > visitor-count.json

          - name: –û–Ω–æ–≤–ª–µ–Ω–Ω—è README
            run: |
          REPO_URL="https://raw.githubusercontent.com/${{ github.repository }}/main"
          LIKES=$(jq -r '.total_likes' likes-data.json)
          VIEWS=$(jq -r '.unique_visitors' visitor-data.json)

          # –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –Ω–æ–≤–æ–≥–æ README
          {
            echo "# ${{ github.event.repository.name }}"
            echo ""
            echo "[![–ü–µ—Ä–µ–≥–ª—è–¥–∏](https://img.shields.io/endpoint?url=${REPO_URL}/visitor-count.json)]"
            echo "[![‚ù§Ô∏è –õ–∞–π–∫–∏](https://img.shields.io/endpoint?url=${REPO_URL}/likes-count.json)]"
            echo ""
            echo "## üíñ –Ø–∫ –ø–æ—Å—Ç–∞–≤–∏—Ç–∏ –ª–∞–π–∫:"
            echo "1. –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å —á–µ—Ä–≤–æ–Ω–µ —Å–µ—Ä—Ü–µ –≤–∏—â–µ - –≤–∞—à –ª–∞–π–∫ –±—É–¥–µ –¥–æ–¥–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ!"
            echo ""
            echo "## üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
            echo "- –í—Å—å–æ–≥–æ –ª–∞–π–∫—ñ–≤: [![–õ–∞–π–∫–∏](https://img.shields.io/endpoint?url=${REPO_URL}/likes-count.json)]"
            echo "- –£–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö –ø–µ—Ä–µ–≥–ª—è–¥—ñ–≤: [![–ü–µ—Ä–µ–≥–ª—è–¥–∏](https://img.shields.io/endpoint?url=${REPO_URL}/visitor-count.json)]"
            echo ""
            
            if [ -f "README_template.md" ]; then
              cat README_template.md
            fi
          } > README.md
      - name: –ö–æ–º—ñ—Ç –∑–º—ñ–Ω
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          git add .
          git commit -m "üìä –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: ${VIEWS} –ø–µ—Ä–µ–≥–ª—è–¥—ñ–≤, ${LIKES} –ª–∞–π–∫—ñ–≤ [skip ci]" || exit 0
          git push
