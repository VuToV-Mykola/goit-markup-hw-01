name: Screenshot and Likes/Views System

on:
  push:
    branches: [main, master]
  schedule:
    - cron: '0 */2 * * *'
  workflow_dispatch:
    inputs:
      add_like:
        description: 'Add like (one per user)'
        required: false
        default: true
        type: boolean
      screenshot_selector:
        description: 'CSS selector for screenshot'
        required: false
        default: 'body'
        type: string

env:
  SCREENSHOT_WIDTH: 1920
  SCREENSHOT_HEIGHT: 1080
  BADGE_STYLE: for-the-badge
  BADGE_COLOR: brightgreen
  LIKES_COLOR: red

jobs:
  update-stats:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable jq

      - name: Initialize data
        run: |
          if [ ! -f "likes-data.json" ]; then
            echo '{"total_likes":0,"unique_users":[],"created_at":"","last_updated":""}' > likes-data.json
          fi
          if [ ! -f "visitor-data.json" ]; then
            echo '{"unique_visitors":1,"last_updated":"","fallback_mode":true}' > visitor-data.json
          fi

      - name: Process likes
        run: |
          if [ "${{ github.event.inputs.add_like }}" = "true" ]; then
            USER="${{ github.actor }}"
            CURRENT_USERS=$(jq -r '.unique_users[]' likes-data.json 2>/dev/null || echo "")
            
            if echo "$CURRENT_USERS" | grep -q "$USER"; then
              echo "➡️ $USER already liked this"
            else
              jq --arg user "$USER" --arg date "$(date -u +%Y-%m-%dT%H:%M:%SZ)" \
                '.total_likes += 1 | .unique_users += [$user] | .last_updated = $date | if .created_at == "" then .created_at = $date else . end' \
                likes-data.json > tmp.json && mv tmp.json likes-data.json
              echo "❤️ New like from $USER"
            fi
          fi

          LIKES=$(jq -r '.total_likes // 0' likes-data.json)
          echo "{\"schemaVersion\":1,\"label\":\"❤️ likes\",\"message\":\"$LIKES\",\"color\":\"${{ env.LIKES_COLOR }}\",\"style\":\"${{ env.BADGE_STYLE }}\"}" > likes-count.json

      - name: Update views
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ "${{ github.actor }}" != "github-actions[bot]" ]; then
            CURRENT=$(jq -r '.unique_visitors // 1' visitor-data.json)
            NEW=$((CURRENT + 1))
            jq --arg count "$NEW" --arg date "$(date -u +%Y-%m-%dT%H:%M:%SZ)" \
              '.unique_visitors = ($count | tonumber) | .last_updated = $date' \
              visitor-data.json > tmp.json && mv tmp.json visitor-data.json
          fi

          VIEWS=$(jq -r '.unique_visitors // 1' visitor-data.json)
          echo "{\"schemaVersion\":1,\"label\":\"👀 views\",\"message\":\"$VIEWS\",\"color\":\"${{ env.BADGE_COLOR }}\",\"style\":\"${{ env.BADGE_STYLE }}\"}" > visitor-count.json

      - name: Update README
        run: |
          REPO_URL="https://raw.githubusercontent.com/${{ github.repository }}/main"
          LIKES=$(jq -r '.total_likes // 0' likes-data.json)
          VIEWS=$(jq -r '.unique_visitors // 1' visitor-data.json)

          {
            echo "# ${{ github.event.repository.name }}"
            echo ""
            echo "[![Перегляди](${REPO_URL}/visitor-count.json)]"
            echo "[![❤️ Лайки](${REPO_URL}/likes-count.json)]"
            echo ""
            echo "## ❤️ Як поставити лайк:"
            echo "1. Натисніть червоне серце вище або зірочку в репозиторії"
            echo ""
            echo "## 📊 Статистика"
            echo "- Всього лайків: [![Лайки](${REPO_URL}/likes-count.json)]"
            echo "- Унікальних переглядів: [![Перегляди](${REPO_URL}/visitor-count.json)]"
            echo ""
            
            if [ -f "README_template.md" ]; then
              cat README_template.md
            fi
          } > README.md

      - name: Commit changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add .
          git commit -m "Update stats: $VIEWS views, $LIKES likes" || exit 0
          git push
